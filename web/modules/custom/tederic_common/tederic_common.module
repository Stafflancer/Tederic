<?php

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\node\Entity\Node;

/**
 * Implements hook_form_alter().
 */
function tederic_common_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if ($form_id == 'search_block_form') {
    $form['keys']['#attributes']['placeholder'] = t('Search across the tederic for products, technology or solutions');
    $form['keys']['#suffix'] = '<div class="close-search"></div>';
  }

  // Exposed form.
  if ($form_id == 'views_exposed_form') {
    // Check view id.
    $view_ids = ['products'];
    $view = $form_state->getStorage('view');
    if (in_array($view['view']->id(), $view_ids)) {
      // Check view display.
      $display = $view['display']['id'];
      if ($display == 'products_block') {
        // Add libraries.
        $form['#attached']['library'][] = 'tederic/series';
        $form['#attached']['library'][] = 'tederic/exposed-form';
        // Change All option label.
        $form['series_sub_category']['#options']['All'] = t('All');
      }
    }
  }
}

/**
 * Implements hook_preprocess_links().
 */
function tederic_common_node_update(EntityInterface $entity) {
  // We need remove Big Card checkbox for other news/events 
  // nodes if new node is Big Card.
  _tederic_common_big_card_checking($entity);
}

/**
 * Implements hook_ENTITY_TYPE_insert().
 */
function tederic_common_node_insert(EntityInterface $entity) {
  // We need remove Big Card checkbox for other news/events 
  // nodes if new node is Big Card.
  _tederic_common_big_card_checking($entity);
}

/**
 * Implements hook_preprocess_region().
 */
function _tederic_common_big_card_checking($entity) {
  $type = $entity->getType();
  $needed_types = [
    'news',
    'events',
  ];
  if (in_array($type, $needed_types)) {
    $big_card = $entity->get('field_big_card')->getValue()[0]['value'];
    if ($big_card) {
      $database = \Drupal::database();
      $query = $database->query("SELECT entity_id FROM {node__field_big_card} WHERE bundle = :type AND entity_id <> :nid AND field_big_card_value = 1", [
        ':type' => $type,
        ':nid' => $entity->id(),
      ]);
      $results = $query->fetchAll();

      foreach ($results as $result) {
        $node = Node::load($result->entity_id);
        $node->set('field_big_card', 0);
        $node->save();
      }
    }
  }
}

/**
 * Implements hook_preprocess_links().
 */
function tederic_common_preprocess_links(&$variables) {
  $variables['language_id'] = \Drupal::languageManager()->getCurrentLanguage()->getId();
}

/**
 * Implements hook_preprocess_region().
 */
function tederic_common_preprocess_region(&$variables) {
  try {
    $variables['is_front'] = \Drupal::service('path.matcher')->isFrontPage();
  }
  catch (Exception $e) {
    $variables['is_front'] = FALSE;
  }
}
